
@{
    ViewBag.Title = ViewBag.Menu;
}

<div id="table" data-get="@Url.RouteUrl("get_budget_source_fund")" data-save="@Url.RouteUrl("save_budget_source_fund")" data-delete="@Url.RouteUrl("delete_prexc")" data-prexcnumber="@Url.RouteUrl("get_prexc_number")"></div>

@section scripts {
    <script>
       var prexc_numbers = [];
       var container = document.getElementById("table");
       var table;
       var valid = true;
       var prexc_url = $("#table").data('prexcnumber');
        //35 cols
       table = new Handsontable(container, {
           startRows: 50,
           startCols: 3,
           manualColumnResize: true,
           rowHeaders: true,
           colWidths: [100,200,500],
           colHeaders: true,
           contextMenu: ['row_above','row_below','remove_row','copy'],
           manualColumnMove: true,
           fillHandle: {
               autoInsertRow: false,
           },
           colHeaders: ['LINE','<b>PREXC CODE</b>','<b>Fund Source Title</b>'],
           columns :[
               {}, { type: 'dropdown', source: prexc_numbers }, {}
           ],
           cells: function (r, c, prop) {
               var cellProperties = {};
               if (c === 0 || c === 2) cellProperties.readOnly = true;
               return cellProperties;
           },
           beforeRemoveRow: function (index, column) {
               var items = this.getData();
               var row_item = items[index];
               var url = $("#table").data('delete');

               var ps = {
                   "ID": row_item[0]
               };
               var data = {
                   data: JSON.stringify(ps)
               };
               $.post(url, data, function (resdata) {
                   if (resdata.length > 0) {
                       var tabledata = [];
                       var total;

                       table.loadData(tabledata);
                   }
               });
           },
           afterValidate: function (isValid, value, row, prop, source) {
               if (!isValid) {
                   valid = false;
                   alert('there exists an invalid cell, disable save');
               } else { valid = true;}
           },
       });
        
       $(document).ready(function () {
           var url = $("#table").data('get');
           $.get(url, function (resdata) {
               if (resdata.length > 0) {
                   var tabledata = [];
                   var total;
                   for (var i = 0; i < resdata.length; i++) {
                       tabledata[i] = new Array(resdata[i]['Line'], resdata[i]['PREXC'], resdata[i]['Title']);
                   }
                   table.loadData(tabledata);
               }
           });
           
           $.get(prexc_url, function (data) {
               if (data.length > 0) {
                   for (var i = 0; i < data.length; i++) {
                       prexc_numbers[i] = data[i]["prexc"];
                   }
                   console.log(prexc_numbers);
               }
           });
        });

       $(window).bind('keydown', function (event) {
           if (event.ctrlKey || event.metaKey) {
               switch (String.fromCharCode(event.which).toLowerCase())
               {
                   case 's':
                       event.preventDefault();
                       document.body.style.cursor = 'wait';
                       if (valid == true) {
                           var url = $("#table").data('save');
                           var budgetsourcefund = [];
                           var data = table.getData();
                           for (var i = 0; i < data.length; i++) {
                               budgetsourcefund[i] = {
                                   "Line":  (i + 1),
                                   "prexc" : data[i][1]
                               };
                           }
                           var data = {
                               data: JSON.stringify(budgetsourcefund)
                           };

                            $.post(url, data, function (resdata) {
                                if (resdata.length > 0) {
                                    var tabledata = [];
                                    var total;
                                    for (var i = 0; i < resdata.length; i++) {
                                        tabledata[i] = new Array(resdata[i]['Line'], resdata[i]['PREXC'], resdata[i]['Title']);
                                    }
                                    table.loadData(tabledata);
                                }
                                document.body.style.cursor = 'default';
                            });
                       } else {
                           alert("Failed to save because theres an ivalid data inputed. See the color red in each rows to indentify errors.");
                       }

                   break;
               }
           }
       });

    </script>
}


