
@{
    ViewBag.Title = "ORS";
}

<div style="width: 100%;overflow: hidden;"  id="ors_table" data-allotmentID="@ViewBag.allotments" data-get="@Url.RouteUrl("get_ors_ps")" data-save="@Url.RouteUrl("save_ors_ps")" data-delete="@Url.Action("DeleteORSPS","ORS")"  data-allotments="@Url.Action("GetFundSource","ORS",new { ID = ViewBag.allotments })" data-print_ors="@Url.Action("PrintOrs","ORSReports")" data-uacs_amount="@Url.Action("ORS_UACS","ORS")"></div>
<span id="allotmentID" class="hidden" >@ViewBag.allotments</span>
@section scripts {
    <script>
        var table;
        (function () {
            var fund_source = [];
            var container = document.getElementById("ors_table");
            var valid = true;
            var expense_url = $("#ors_table").data('expense');
            var allotments_url = $("#ors_table").data('allotments');
            var allotmentID = $("#allotmentID").html();
            table = new Handsontable(container, {
                startRows: 1,
                startCols: 17,
                rowHeaders: true,
                colWidths: [1, 1, 140, 200, 200, 200, 300, 300, 700, 100, 200, 200, 200, 200, 200, 200, 200],
                colHeaders: true,
                stretchH: 'all',
                dropdownMenu: true,
                fillHandle: {
                    autoInsertRow: false,
                },
                outsideClickDeselects: false,
                selectionMode: 'multiple',
                contextMenu: {
                    items: {
                        "make_bold": {
                            name: 'Print ORS',
                            callback: function (key, options) {
                                var selection = this.getSelected();
                                var tempdata = this.getData();
                                var data = [];
                                var url = $("#ors_table").data('print_ors');
                                data = selectedRows(selection, tempdata, 1);
                                openWindowWithPost(url, data, allotmentID);
                            }
                        },
                        "": {
                            name: 'UACS Amount Entry / Disbmt.',
                            callback: function (key, options) {
                                var selection = this.getSelected();
                                var tempdata = this.getData();
                                var data = [];
                                data = selectedRows(selection, tempdata, 0);
                                orsUACS(data[0]);
                            }
                        }, "row_below": {}, "remove_row": {}, "row_above": {}, "copy": {},
                    }
                },
                beforeRemoveRow: function (index, column) {
                    if (confirm("Are you sure you want to delete this item") == true) {
                        var selection = this.getSelected();
                        var tempdata = this.getData();
                        var data = [];
                        var url = $("#ors_table").data('delete');
                        data = selectedRows(selection, tempdata, 0);
                        if (deleteRows(url, data)) {
                            load_data();
                            return true;
                        }
                    } else {
                        return false;
                    }
                    
                },
                colHeaders: ['<b>ID</b>', '<b>ROW#</b>', '<b>DATE</b/>', '<b>DV</b>', '<b>PO#</b>', '<b>PR#</b>', '<b>PAYEE</b>', '<b>ADDRESS</b>', '<b>PARTICULARS</b>', '<b>ORS NO</b>', '<b>FUND SOURCE</b>', '<b>GROSS</b>', '<b>CREATED BY</b>', '<b>Date Received</b>', '<b>Time Received</b>', '<b>Date Released</b>', '<b>Time Released</b>', ''],
                columns: [
                    {},
                    {},
                    {
                        type: 'date',
                        dateFormat: 'MM/DD/YYYY',
                        correctFormat: true,
                        defaultDate: Date.now()
                    }, {}, {}, {}, {}, {}, {}, {},
                    {
                        type: 'autocomplete',
                        source: fund_source,
                        filter :false,
                        strict : true
                    },
                    {},
                    {},
                    {
                        type: 'date',
                        dateFormat: 'MM/DD/YYYY',
                        correctFormat: true,
                        defaultDate: Date.now()
                    },
                    {
                        type: 'time',
                        timeFormat: 'HH:mm:ss',
                        correctFormat: true
                    },
                    {
                        type: 'date',
                        dateFormat: 'MM/DD/YYYY',
                        correctFormat: true,
                        defaultDate: Date.now()
                    },
                    {
                        type: 'time',
                        timeFormat: 'HH:mm:ss',
                        correctFormat: true
                    }, {}
                ],
                cells: function (r, c, prop) {
                    var cellProperties = {};
                    if (c === 0 || c === 1 || c == 9 || c == 11 || c == 12) cellProperties.readOnly = true;
                    return cellProperties;
                },
                
                afterValidate: function (isValid, value, row, prop, source) {
                    if (!isValid) {
                        valid = false;
                        alert('there exists an invalid cell, disable save');
                    } else { valid = true; }
                },
            });

            $(document).ready(function () {
                $("#loading").modal('show');
                load_data();
                resize();
                $.get(allotments_url, function (response) {
                    if (response.length > 0) {
                        for (var i = 0; i < response.length; i++) {
                            fund_source[i] = response[i]["Code"];
                        }
                    }
                });
            });

            $(window).bind('keydown', function (event) {
                if (event.ctrlKey && event.keyCode == 82) {
                    var table_data = table.getData();
                    table_data.push(new Array(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null));
                    table.loadData(table_data);
                    event.preventDefault();
                    return;
                }
                else if (event.ctrlKey || event.metaKey) {
                    switch (String.fromCharCode(event.which).toLowerCase()) {
                        case 's':
                            event.preventDefault();
                            document.body.style.cursor = 'wait';
                            if (valid == true) {
                                var url = $("#ors_table").data('save');
                                var orsps = [];
                                var data = table.getData();
                                var ok = false;
                                for (var i = 0; i < data.length; i++) {
                                    if (data[i][10]) {
                                        orsps[i] = {
                                            "ID": data[i][0],
                                            "Row": (i + 1),
                                            "Date": data[i][2],
                                            "DB": data[i][3],
                                            "PO": data[i][4],
                                            "PR": data[i][5],
                                            "PAYEE": data[i][6],
                                            "Adress": data[i][7],
                                            "Particulars": data[i][8],
                                            "FundSource": data[i][10],
                                            "DateReceived": data[i][13],
                                            "TimeReceived": data[i][14],
                                            "DateReleased": data[i][15],
                                            "TimeReleased": data[i][16]
                                        }
                                        ok = true;
                                    } else {
                                        ok = false;
                                    }
                                }
                                if (ok) {
                                    var data = {
                                        data: JSON.stringify(orsps)
                                    };

                                    $.post(url, data, function (resdata) {
                                        load_data();
                                        Lobibox.notify('success', {
                                            rounded: true,
                                            size: 'mini',
                                            msg: 'Changes saved.'
                                        });
                                        document.body.style.cursor = 'default';
                                    });
                                } else {
                                    Lobibox.alert("warning", //AVAILABLE TYPES: "error", "info", "success", "warning"
                                    {
                                        msg: "There might be row that has no fund source selected. Please select a fund source for that row.",
                                        title: "Fund Source"
                                    });
                                    document.body.style.cursor = 'default';
                                }
                            } else {
                                Lobibox.alert("warning", //AVAILABLE TYPES: "error", "info", "success", "warning"
                                 {
                                     msg: "Failed to save because theres an ivalid data inputed. See the color red in each rows to indentify errors.",
                                     title: ""
                                 });
                            }
                            break;
                    }
                }
            });
        })();
        
        function load_data() {
            var url = $("#ors_table").data('get');
            var grand_total = 0;
            var disbursements = 0;
            $.get(url, function (resdata) {
                var tabledata = [];
                if (resdata.length > 0) {
                    for (var i = 0; i < resdata.length; i++) {
                        tabledata[i] = new Array(resdata[i]['ID'], resdata[i]['Row'], resdata[i]['Date'], resdata[i]['DB'], resdata[i]['PO'], resdata[i]['PR'], resdata[i]['PAYEE'], resdata[i]['Adress'], resdata[i]['Particulars'], resdata[i]['Row'], resdata[i]['FundSource'], numberWithCommas(resdata[i]['Gross']), resdata[i]['Created_By'], resdata[i]['DateReceived'], resdata[i]['TimeReceived'], resdata[i]['DateReleased'], resdata[i]['TimeReleased'], '');
                        grand_total += resdata[i]['Gross'];
                        disbursements += resdata[i]['Disbursement'];
                    }
                    $("#loading").modal('hide');
                } else {
                    tabledata[0] = new Array(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
                    $("#loading").modal('hide');
                }
                $("#loading").modal('hide');
                table.loadData(tabledata);
                grand_total = grand_total > 0 ? numberWithCommas(grand_total) : "0.00";
                $("#total_ors").text("TOTAL : " + grand_total);
                disbursements = disbursements > 0 ? numberWithCommas(disbursements) : "0.00";
                $("#disbursement").text("DISBURSMENT : " + disbursements);
                
            });
        }

        function mo()
        {
            load_data();
        }
    </script>
}

@section footer{
    @Html.Partial("footer")
}

@section search_form{
    <form class="navbar-form navbar-left pull-right" role="search">
        <div class="form-group">
            <input type="text" name="q" class="form-control" placeholder="Search">
        </div>
        <button type="submit" class="btn btn-success"><span class="glyphicon glyphicon-search"></span> Search</button>
    </form>
}
